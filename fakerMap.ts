import { faker } from "./deps.ts";
/**
 * Allows us to map the faker library to our own types
 * and to use the faker library in our own code.
 *
 * An example string we'd send to this function is `_fullName_`, which would
 * return a random full name (faker.name.fullName()).
 */

export const fakerMap = (key: string): unknown => {
  // Map the key to the faker library.
  switch (key) {
    case "_fullName_":
      return faker.name.fullName();
    case "_firstName_":
      return faker.name.firstName();
    case "_lastName_":
      return faker.name.lastName();
    case "_jobTitle_":
      return faker.name.jobTitle();
    case "_prefix_":
      return faker.name.prefix();
    case "_suffix_":
      return faker.name.suffix();
    case "_title_":
      return faker.name.jobTitle();
    case "_jobDescriptor_":
      return faker.name.jobDescriptor();
    case "_jobArea_":
      return faker.name.jobArea();
    case "_jobType_":
      return faker.name.jobType();
    case "_phoneNumber_":
      return faker.phone.phoneNumber();
    case "_phoneNumberFormat_":
      return faker.phone.phoneNumberFormat();
    case "_phoneFormats_":
      return faker.phone.phoneFormats();
    case "_email_":
      return faker.internet.email();
    case "_exampleEmail_":
      return faker.internet.exampleEmail();
    case "_userName_":
      return faker.internet.userName();
    case "_protocol_":
      return faker.internet.protocol();
    case "_url_":
      return faker.internet.url();
    case "_domainName_":
      return faker.internet.domainName();
    case "_domainSuffix_":
      return faker.internet.domainSuffix();
    case "_domainWord_":
      return faker.internet.domainWord();
    case "_ip_":
      return faker.internet.ip();
    case "_ipv6_":
      return faker.internet.ipv6();
    case "_userAgent_":
      return faker.internet.userAgent();
    case "_color_":
      return faker.internet.color();
    case "_mac_":
      return faker.internet.mac();
    case "_password_":
      return faker.internet.password();
    case "_word_":
      return faker.lorem.word();
    case "_words_":
      return faker.lorem.words();
    case "_sentence_":
      return faker.lorem.sentence();
    case "_slug_":
      return faker.lorem.slug();
    case "_sentences_":
      return faker.lorem.sentences();
    case "_paragraph_":
      return faker.lorem.paragraph();
    case "_paragraphs_":
      return faker.lorem.paragraphs();
    case "_text_":
      return faker.lorem.text();
    case "_lines_":
      return faker.lorem.lines();
    case "_companyName_":
      return faker.company.companyName();
    case "_companySuffix_":
      return faker.company.companySuffix();
    case "_catchPhrase_":
      return faker.company.catchPhrase();
    case "_bs_":
      return faker.company.bs();
    case "_catchPhraseAdjective_":
      return faker.company.catchPhraseAdjective();
    case "_catchPhraseDescriptor_":
      return faker.company.catchPhraseDescriptor();
    case "_catchPhraseNoun_":
      return faker.company.catchPhraseNoun();
    case "_bsAdjective_":
      return faker.company.bsAdjective();
    case "_bsBuzz_":
      return faker.company.bsBuzz();
    case "_bsNoun_":
      return faker.company.bsNoun();
    case "_column_":
      return faker.database.column();
    case "_type_":
      return faker.database.type();
    case "_collation_":
      return faker.database.collation();
    case "_engine_":
      return faker.database.engine();
    case "_past_":
      return faker.date.past();
    case "_future_":
      return faker.date.future();
    case "_recent_":
      return faker.date.recent();
    case "_month_":
      return faker.date.month();
    case "_weekday_":
      return faker.date.weekday();
    case "_account_":
      return faker.finance.account();
    case "_accountName_":
      return faker.finance.accountName();
    case "_mask_":
      return faker.finance.mask();
    case "_amount_":
      return faker.finance.amount();
    case "_transactionType_":
      return faker.finance.transactionType();
    case "_currencyCode_":
      return faker.finance.currencyCode();
    case "_currencyName_":
      return faker.finance.currencyName();
    case "_currencySymbol_":
      return faker.finance.currencySymbol();
    case "_bitcoinAddress_":
      return faker.finance.bitcoinAddress();
    case "_iban_":
      return faker.finance.iban();
    case "_bic_":
      return faker.finance.bic();
    case "_adjective_":
      return faker.word.adjective();
    case "_noun_":
      return faker.word.noun();
    case "_verb_":
      return faker.word.verb();
    case "_city_":
      return faker.address.city();
    case "_cityPrefix_":
      return faker.address.cityPrefix();
    case "_citySuffix_":
      return faker.address.citySuffix();
    case "_streetName_":
      return faker.address.streetName();
    case "_streetAddress_":
      return faker.address.streetAddress();
    case "_streetSuffix_":
      return faker.address.streetSuffix();
    case "_streetPrefix_":
      return faker.address.streetPrefix();
    case "_secondaryAddress_":
      return faker.address.secondaryAddress();
    case "_county_":
      return faker.address.county();
    case "_country_":
      return faker.address.country();
    case "_countryCode_":
      return faker.address.countryCode();
    case "_state_":
      return faker.address.state();
    case "_stateAbbr_":
      return faker.address.stateAbbr();
    case "_latitude_":
      return faker.address.latitude();
    case "_longitude_":
      return faker.address.longitude();
    case "_direction_":
      return faker.address.direction();
    case "_cardinalDirection_":
      return faker.address.cardinalDirection();
    case "_ordinalDirection_":
      return faker.address.ordinalDirection();
    case "_nearbyGPSCoordinate_":
      return faker.address.nearbyGPSCoordinate();
    case "_timeZone_":
      return faker.address.timeZone();
    case "_colorName_":
      return faker.commerce.color();
    case "_department_":
      return faker.commerce.department();
    case "_productName_":
      return faker.commerce.productName();
    case "_price_":
      return faker.commerce.price();
    case "_productAdjective_":
      return faker.commerce.productAdjective();
    case "_productMaterial_":
      return faker.commerce.productMaterial();
    case "_product_":
      return faker.commerce.product();
    case "_number_":
      return faker.datatype.number();
    case "_float_":
      return faker.datatype.float();
    case "_arrayElement_":
      return faker.datatype.array();
    case "_uuid_":
      return faker.datatype.uuid();
    case "_boolean_":
      return faker.datatype.boolean();
    case "_image_":
      return faker.image.image();
    case "_avatar_":
      return faker.image.avatar();
    case "_imageUrl_":
      return faker.image.imageUrl();
    case "_abstract_":
      return faker.image.abstract();
    case "_animals_":
      return faker.image.animals();
    case "_business_":
      return faker.image.business();
    case "_cats_":
      return faker.image.cats();
    case "_food_":
      return faker.image.food();
    case "_nightlife_":
      return faker.image.nightlife();
    case "_fashion_":
      return faker.image.fashion();
    case "_people_":
      return faker.image.people();
    case "_nature_":
      return faker.image.nature();
    case "_sports_":
      return faker.image.sports();
    case "_technics_":
      return faker.image.technics();
    case "_transport_":
      return faker.image.transport();
    case "_dataUri_":
      return faker.image.dataUri();
    case "_lorem_":
      return faker.lorem.word();
    case "_findName_":
      return faker.name.findName();
    default:
      return "";
  }
};
